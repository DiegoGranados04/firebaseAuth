name: Secure Deployment Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          organization: DiegoGranados04
          projectKey: DiegoGranados04_firebaseAuth
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  unit-tests:
    needs: sonarqube-analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  security-checks:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run static analysis
        run: npm run lint

      - name: Check for vulnerable dependencies
        run: npm audit

      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main

  quality-gate:
    needs: security-checks
    runs-on: ubuntu-latest
    steps:
      - name: Enforce quality gates (placeholder)
        run: |
          echo "Aquí podrías usar un script con la API de SonarCloud para validar el score y el coverage"
          # exit 1 si el resultado no cumple con tus reglas

  deploy:
    needs: quality-gate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to production
        run: echo "Deployment to production would happen here"
